{"version":3,"sources":["components/Mainnav.jsx","ressources/students.js","components/NewForm.jsx","components/ListStudents.jsx","App.jsx","serviceWorker.js","index.js"],"names":["Mainnav","react_default","a","createElement","Nav","className","NavItem","NavLink","href","disabled","students","name","age","photo","NewForm","_ref","alumni","submit","generic","handleStudent","insertStudent","handleForm","Form","FormGroup","Label","for","Input","type","id","defaultValue","onChange","e","Object","objectSpread","target","value","onClick","ListStudents","showForm","showModifyForm","handleModify","handleIndex","handleDelete","_useState","useState","_useState2","slicedToArray","rerender","setRerender","Row","Col","xs","lg","index_esm","size","map","alumnus","idx","key","Card","CardImg","src","CardTitle","CardText","App","Students","setStudents","_useState3","_useState4","formToggle","_useState5","_useState6","modifyFormToggle","_useState7","_useState8","newStudent","setStudent","_useState9","_useState10","modifyStudent","setModifyStudent","_useState11","_useState12","indexStudent","setIndex","useEffect","console","log","components_Mainnav","components_ListStudents","index","splice","components_NewForm","studentsArr","modifiedStudent","show","newStudents","unshift","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4426271c.chunk.js","sourcesContent":["import React from 'react';\nimport { Nav, NavItem, NavLink } from 'reactstrap';\n\nconst Mainnav = () => (\n  <Nav className=\"mainNav\">\n    <NavItem>\n      <NavLink href=\"/\">Gestion des classes</NavLink>\n    </NavItem>\n    <NavItem>\n      <NavLink href=\"/\">Classe 1</NavLink>\n    </NavItem>\n    <NavItem>\n      <NavLink href=\"/\" disabled>Classe 2</NavLink>\n    </NavItem>\n    <NavItem>\n      <NavLink href=\"/\" disabled>Classe 3</NavLink>\n    </NavItem>\n  </Nav>\n);\n\nexport default Mainnav;\n","const students = [\n  {\n    name: 'Alex John',\n    age: '15',\n    photo: 'https://randomuser.me/api/portraits/men/65.jpg'\n  },\n  {\n    name: 'Robert Paulson',\n    age: '17',\n    photo: 'https://randomuser.me/api/portraits/men/64.jpg'\n  },\n  {\n    name: 'Jean Dupont',\n    age: '14',\n    photo: 'https://randomuser.me/api/portraits/men/66.jpg'\n  },\n  {\n    name: 'Marcel Durand',\n    age: '16',\n    photo: 'https://randomuser.me/api/portraits/men/67.jpg'\n  },\n  {\n    name: 'Cedric Alban',\n    age: '15',\n    photo: 'https://randomuser.me/api/portraits/men/68.jpg'\n  },\n  {\n    name: 'Alain Robert',\n    age: '16',\n    photo: 'https://randomuser.me/api/portraits/men/69.jpg'\n  },\n  {\n    name: 'Jean Baguette',\n    age: '18',\n    photo: 'https://randomuser.me/api/portraits/men/70.jpg'\n  },\n  {\n    name: 'Sebastien Milou',\n    age: '16',\n    photo: 'https://randomuser.me/api/portraits/men/71.jpg'\n  },\n  {\n    name: 'Chris Topher',\n    age: '20',\n    photo: 'https://randomuser.me/api/portraits/men/72.jpg'\n  },\n  {\n    name: 'Blaise Pascal',\n    age: '18',\n    photo: 'https://randomuser.me/api/portraits/men/73.jpg'\n  },\n  {\n    name: 'Alexandre Grand',\n    age: '16',\n    photo: 'https://randomuser.me/api/portraits/men/74.jpg'\n  },\n  {\n    name: 'Georges Clown',\n    age: '17',\n    photo: 'https://randomuser.me/api/portraits/men/75.jpg'\n  },\n  {\n    name: 'Sandro Joseph',\n    age: '15',\n    photo: 'https://randomuser.me/api/portraits/men/76.jpg'\n  },\n  {\n    name: 'Louis Dor',\n    age: '14',\n    photo: 'https://randomuser.me/api/portraits/men/77.jpg'\n  },\n  {\n    name: 'Junior Senior',\n    age: '18',\n    photo: 'https://randomuser.me/api/portraits/men/78.jpg'\n  },\n  {\n    name: 'Tom Crouse',\n    age: '17',\n    photo: 'https://randomuser.me/api/portraits/men/79.jpg'\n  },\n  {\n    name: 'Quentin Leboeuf',\n    age: '14',\n    photo: 'https://randomuser.me/api/portraits/men/80.jpg'\n  },\n];\n\nexport default students;\n","import React from 'react';\nimport { Form, FormGroup, Label, Input, Button } from 'reactstrap';\n\nconst NewForm = ({ alumni, submit, generic, handleStudent, insertStudent, handleForm }) => (\n  <Form className=\"form\">\n    <FormGroup>\n      <Label for=\"name\">Nom, Pr√©nom</Label>\n      <Input\n        type=\"text\"\n        name=\"name\"\n        id=\"name\"\n        defaultValue={generic.name}\n        onChange={e => handleStudent({ ...generic, name: e.target.value })}\n      />\n    </FormGroup>\n    <FormGroup>\n      <Label for=\"age\">Age</Label>\n      <Input\n        type=\"text\"\n        name=\"age\"\n        id=\"age\"\n        defaultValue={generic.age}\n        onChange={e => handleStudent({ ...generic, age: e.target.value })}\n      />\n    </FormGroup>\n    <FormGroup>\n      <Label for=\"photo\">Lien vers image</Label>\n      <Input\n        type=\"url\"\n        name=\"photo\"\n        id=\"photo\"\n        defaultValue={generic.photo}\n        onChange={e => handleStudent({ ...generic, photo: e.target.value })}\n      />\n    </FormGroup>\n    <FormGroup>\n      <Input className=\"inputBtn\" type=\"button\" value=\"Valider\" onClick={() => insertStudent(alumni, generic, submit, handleForm)}>Valider</Input>\n      <Input className=\"inputBtn\" type=\"button\" value=\"Annuler\" onClick={() => handleForm(false)}>Annuler</Input>\n    </FormGroup>\n  </Form>\n);\n\nexport default NewForm;\n","import React, { useState } from 'react';\nimport { Row, Col, Card, CardImg, CardTitle, CardText } from 'reactstrap';\nimport { MdAdd, MdEdit, MdClose } from 'react-icons/md';\n\nconst ListStudents = ({\n  showForm,\n  alumni,\n  showModifyForm,\n  handleModify,\n  handleIndex,\n  handleDelete\n}) => {\n  const [rerender, setRerender] = useState(false);\n\n  return (\n    <Row className=\"studentsRow\">\n      <Col className=\"addCardCol align-self-center text-center\" xs={6} lg={4}>\n        <MdAdd className=\"addCard\" size={100} onClick={() => showForm(true)} />\n      </Col>\n      {alumni.map((alumnus, idx) => (\n        <Col className=\"studentColChild p-3\" key={alumnus.name} xs={6} lg={4}>\n          <Card className=\"mainCard text-center\">\n            <MdEdit\n              size={30}\n              className=\"editBtn\"\n              onClick={() => {\n                showModifyForm(true);\n                handleModify(alumnus);\n                handleIndex(idx);\n              }}\n            />\n            <MdClose\n              size={30}\n              className=\"supprBtn\"\n              onClick={() => {\n                handleDelete(idx);\n                handleIndex(idx);\n                setRerender(!rerender);\n              }}\n            />\n            <CardImg className=\"cardImg\" src={alumnus.photo} />\n            <CardTitle>{alumnus.name}</CardTitle>\n            <CardText>{alumnus.age} ans</CardText>\n          </Card>\n        </Col>\n      ))}\n    </Row>\n  );\n};\n\nexport default ListStudents;\n","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { Row, Col } from 'reactstrap';\nimport Mainnav from './components/Mainnav';\nimport Students from './ressources/students';\nimport NewForm from './components/NewForm';\nimport ListStudents from './components/ListStudents';\n\nconst App = () => {\n  const [students, setStudents] = useState(Students);\n  const [formToggle, showForm] = useState(false);\n  const [modifyFormToggle, showModifyForm] = useState(false);\n  const [newStudent, setStudent] = useState({ name: '', age: '', photo: '' });\n  const [modifyStudent, setModifyStudent] = useState();\n  const [indexStudent, setIndex] = useState();\n\n  useEffect(() => {\n    setStudent({ name: '', age: '', photo: '' });\n  }, [formToggle]);\n\n  function insertNewStudent(studentsArr, newStudents, submit, show) {\n    studentsArr.unshift(newStudents);\n    show(false);\n    return submit(studentsArr);\n  }\n\n  function insertModifyStudent(studentsArr, modifiedStudent, submit, show) {\n    setStudents(() => (studentsArr[indexStudent] = modifiedStudent));\n    show(false);\n    return submit(studentsArr);\n  }\n\n  function deleteStudent(index) {\n    students.splice(index, 1);\n    return students;\n  }\n\n  console.log(students);\n\n  return (\n    <Row className=\"mainContainer\">\n      <Col className=\"maninNavCol p-0\" xs={3}>\n        <Mainnav />\n      </Col>\n      <Col className={formToggle || modifyFormToggle ? 'fadedStudentCol' : 'studentCol'} xs={9}>\n        <ListStudents\n          alumni={students}\n          showForm={showForm}\n          showModifyForm={showModifyForm}\n          handleModify={setModifyStudent}\n          handleIndex={setIndex}\n          handleDelete={deleteStudent}\n        />\n      </Col>\n      {formToggle || modifyFormToggle ? (\n        <Col className=\"toggledFormCol\" xs={3}>\n          <NewForm\n            alumni={students}\n            submit={setStudents}\n            generic={modifyFormToggle ? modifyStudent : newStudent}\n            handleStudent={modifyFormToggle ? setModifyStudent : setStudent}\n            insertStudent={modifyFormToggle ? insertModifyStudent : insertNewStudent}\n            handleForm={modifyFormToggle ? showModifyForm : showForm}\n          />\n        </Col>\n      ) : <Col className=\"nonToggledFormCol\" />}\n    </Row>\n  );\n};\n\nexport default App;\n\n{\n  /* <Col className={(formToggle || modifyFormToggle) ? 'toggledFormCol' : 'nonToggledFormCol'} xs={3}>\n          <NewForm\n            alumni={students}\n            submit={setStudents}\n            generic={modifyFormToggle ? modifyStudent : newStudent}\n            handleStudent={modifyFormToggle ? setModifyStudent : setStudent}\n            insertStudent={modifyFormToggle ? insertModifyStudent : insertNewStudent}\n            handleForm={modifyFormToggle ? showModifyForm : showForm}\n          />\n        </Col> */\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}